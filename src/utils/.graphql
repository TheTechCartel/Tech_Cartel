type User
  @model
  @auth(
    rules: [
      { allow: owner, operations: [create, delete] }
      { allow: private, operations: [read, update] }
    ]
  ) {
  id: ID!
  fullname: String!
  email: String!
  username: String!
  bio: String
  location: String
  isAdmin: Boolean!
  image: String!
  posts: [Post] @hasMany(indexName: "byAuthor", fields: ["id"])
  nodesCreated: [Node] @hasMany(indexName: "byAuthor", fields: ["id"])
}

type Path
  @model
  @auth(
    rules: [
      { allow: owner, operations: [create, delete] }
      { allow: private, operations: [read, update] }
    ]
  ) {
  id: ID!
  title: String!
  description: String!
}

type MiniPath
  @model
  @auth(
    rules: [
      { allow: owner, operations: [create, delete] }
      { allow: private, operations: [read, update] }
    ]
  ) {
  id: ID!
  title: String!
  description: String!
}

type Node
  @model
  @auth(
    rules: [
      { allow: owner, operations: [create, delete] }
      { allow: private, operations: [read, update] }
    ]
  ) {
  id: ID!
  title: String!
  videoResources: [String]
  webResources: [String]
  bookResources: [String]
  authorID: ID! @index(name: "byAuthor", sortKeyFields: ["title"])
  author: User @belongsTo(fields: ["authorID"])
}

type Post
  @model
  @auth(
    rules: [
      { allow: owner, operations: [create, delete] }
      { allow: private, operations: [read, update] }
    ]
  ) {
  id: ID!
  content: String!
  category: Path @hasOne
  authorID: ID! @index(name: "byAuthor", sortKeyFields: ["content"])
  author: User @belongsTo(fields: ["authorID"])
}
